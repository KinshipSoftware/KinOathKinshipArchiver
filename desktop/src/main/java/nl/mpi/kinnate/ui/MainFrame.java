package nl.mpi.kinnate.ui;

import nl.mpi.arbil.ui.ArbilWindowManager;
import nl.mpi.arbil.util.ApplicationVersionManager;
import nl.mpi.kinnate.KinOathVersion;
import nl.mpi.kinnate.ui.menu.MainMenuBar;
import nl.mpi.kinnate.ui.window.AbstractDiagramManager;
import nl.mpi.kinnate.ui.window.WindowedDiagramManager;

/*
 *  Document   : MainFrame
 *  Author     : Peter Withers
 *  Created on : Aug 16, 2010, 5:20:20 PM
 */
public class MainFrame extends javax.swing.JFrame {

    AbstractDiagramManager abstractDiagramManager;

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        final ApplicationVersionManager versionManager = new ApplicationVersionManager(new KinOathVersion());

//        abstractDiagramManager = new LayeredDiagramManager(versionManager, this);
//        abstractDiagramManager = new TabbedDiagramManager(versionManager, this);
        abstractDiagramManager = new WindowedDiagramManager(versionManager, this);

        nl.mpi.kinnate.KinnateArbilInjector.injectHandlers(versionManager);
        abstractDiagramManager.newDiagram();
        setJMenuBar(new MainMenuBar(abstractDiagramManager));
        this.doLayout();
        this.pack();
        ArbilWindowManager.getSingleInstance().setMessagesCanBeShown(true);
        abstractDiagramManager.setWindowTitle(this, versionManager.getApplicationVersion().compileDate);
        abstractDiagramManager.setWindowIcon(this);
//	if (arbilMenuBar.checkNewVersionAtStartCheckBoxMenuItem.isSelected()) {
        // todo: Ticket #1066 add the check for updates and check now menu items
        versionManager.checkForUpdate();
//	}
    }

    public void loadAllTrees() {
        abstractDiagramManager.loadAllTrees();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                final MainFrame mainFrame = new MainFrame();
                mainFrame.setVisible(true);
                mainFrame.loadAllTrees();
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
